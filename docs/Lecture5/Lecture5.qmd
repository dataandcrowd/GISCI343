---
title: "Python Data Bootcamp - Geopandas 2"
subtitle: ": GIS Tools and Application"
date: 04/01/2025
date-format: long
author:
  - name: Hyesop Shin
    orcid: 0000-0003-2637-7933
    email: hyesop.shin@auckland.ac.nz
    affiliations:
      - name: University of Auckland
        address: 23 Symonds Street
        city: Auckland
        postal-code: 1010
format: 
  revealjs:
      logo: Figs/uoa-logo.png
      css: logo.css
      slide-number: true
      show-slide-number: print
editor: source
include-in-header:
  - text: |
      <style type="text/css">
      ul li ul li {
        font-size: 0.7em;
      }
      </style>
---


## Recap of Previous Lecture

- melt and cast
- Brief ideation of GIS and maps
- Introduction to `geopandas`



## Today's Lecture

- Vector tools using `geopandas`
- Raster tools using `rasterio``
- Distance
- Population density
- Classified choropleth maps
- barcharts...



## Lab 1 Assignment

* Q4 was critical
* You either can create a second dictionary
* Or `for loop` the rows
* or `melt` and `cast` the wide column dataframes

<br>

Let's go through some codes!

## Why do many examples use `fig, ax = plt.subplots()`

![](Figs/stackoverflow.png){fig-align=center}

## Vector Tools {.smaller}


![](Figs/vector_tools.jpg)


::: {.notes}
* `buffer`
  - A buffer is a zone created around a spatial feature at a defined distance. 
  - This zone can be used to analyse proximity relationships

* `clip`
  - The Clip tool allows you to extract a specific area from one dataset using another dataset as a boundary. 
  - It’s useful for refining datasets, focusing on areas of interest, and reducing file sizes.

* `dissolve`
  *The Dissolve tool helps merge multiple features into one based on a common attribute. 
  *This is useful when simplifying datasets and aggregating spatial data.

* `difference (Erase)`
  * The Difference (Erase) tool removes the areas of one layer that overlap with another layer. 
  * Cutting out unwanted features from a dataset.


* `intersect`
  * The Intersect tool extracts the overlapping portions of two layers. 
  * Commonly used in spatial analysis to find common areas between datasets.

* `merge`
  * Merging combines two or more layers into one


* `Spatial Join`
  * A spatial join matches rows from the Join Features values to the Target Features values based on their relative spatial locations

:::


## Vector tools in Python

* Let's go to colab!

```python
import geopandas as gpd
from shapely.geometry import Polygon, Point, LineString

gpd.buffer() # buffer
gpd.clip() # clip
gpd.overlay(A, B, how='difference') # difference(erase)
gpd.dissolve(by='region') # dissolve

```

## Your turn

Follow the steps below to perform spatial and statistical analysis using the 2023 population data:

```python
pop23 = gpd.read_file('https://raw.githubusercontent.com/dataandcrowd/GISCI343/main/docs/Lecture5/data/pop23.gpkg')
```

<br>

1. Calculate the centroid of each region
2. Measure distances from Wellington
3. Classify total population using Jenks natural breaks (k = 5) - Go back to tutorial
4. Dissolve regions by North and South Islands:
5. Calculate total population density by region



## Raster {.smaller}

So far we’ve been working mainly with vector data using `geopandas`: lines, points, polygons

The basemap tiles we’ve using are an example of raster data

* Raster data:
  - Gridded or pixelated
  - Maps easily to an array — it’s the representation for digital images


![](https://musa-550-fall-2023.github.io/content/week-5/imgs/raster-intro.png){fig-align=center}


## Examples

* Continuous rasters
    - Multispectral satellite imagery, e.g., the Landsat satellite
    - Digital Elevation Models (DEMs)
    - Maps of canopy height derived from LiDAR data.

* Categorical rasters
    - Land cover or land-use maps.
    - Tree height maps classified as short, medium, and tall trees.
    - Snowcover masks (binary snow or no snow)

## Resolution

The spatial distance that a single pixel covers on the ground.

![](https://musa-550-fall-2023.github.io/content/week-5/imgs/raster-resolution.png)


## Extent
The bounding box that covers the entire extent of the raster data.

![](https://musa-550-fall-2023.github.io/content/week-5/imgs/raster-extent-2.png){fig-align=center}


## Affine transformation: Transforming from pixel space to real space

* A mapping from pixel space (rows and columns of the image) to the x and y coordinates defined by the CRS
* Typically a six parameter matrix defining the origin, pixel resolution, and rotation of the raster image


## Multi-band raster data

Colour images are multi-band rasters!

![](https://musa-550-fall-2023.github.io/content/week-5/imgs/color-images.png)


## Multi-band raster data

Each band measures the light reflected from different parts of the electromagnetic spectrum.

![](https://musa-550-fall-2023.github.io/content/week-5/imgs/multi-band-raster.png)


## The raster format: GeoTIFF

* A standard .tif image format with additional spatial information embedded in the file, which includes metadata for:
  * Geotransform, e.g., extent, resolution
  * Coordinate Reference System (CRS)
  * Values that represent missing data (NoDataValue)

![](https://i.ytimg.com/vi/A5GphlWJLDQ/maxresdefault.jpg){fig-align=center}


## Tools for raster data

* Lots of different options: really just working with arrays
* One of the first options: Geospatial Data Abstraction Library (GDAL)
* Low level and not really user-friendly
* A more recent, much more Pythonic package: `rasterio`
* We’ll use `rasterio` for the majority of our raster analysis


## Getting Started with `rasterio`

```python
import rasterio as rio

elev = rio.open('elevation.tif')
elev.crs
elev.bounds # The bounds
elev.count # The number of bands available
elev.indexes # The band numbers that are available
elev.shape # Number of pixels in the x and y directions
elev.meta # # All of the meta data

```

## Slope

* The Slope tool identifies the steepness at each cell of a raster surface. 
* The lower the slope value, the flatter the terrain; the higher the slope value, the steeper the terrain.
* The Slope tool uses a 3 by 3 window of cells to compute the value (but the windows can change)

![](https://pro.arcgis.com/en/pro-app/latest/tool-reference/spatial-analyst/GUID-43BD458B-05F2-4DC9-B133-12AE9C297797-web.png){fig-align=center}


## Mask raster by vector boundaries
Cuts out a portion of a raster dataset, mosaic dataset, or image service layer.

![](https://pro.arcgis.com/en/pro-app/latest/tool-reference/data-management/GUID-DA987A2F-5CC5-47D4-91B0-D77820AD40CA-web.gif){fig-align=center}


## Zonal statistics

* calculates statistics on cell values of a raster (a value raster) within the zones defined by another dataset.

![](https://www.paulamoraga.com/book-spatial/book-spatial_files/figure-html/terracentroid-1.png){fig-align=center}


## Summary 

::: {style="font-size: 85%;"}

- Use **vector tools** (e.g., `buffer`, `clip`, `dissolve`, `spatial join`) to analyse **discrete features** like roads, cities, and regions.
- Use **raster tools** (e.g., slope, masking, zonal statistics) to explore **continuous surfaces** such as elevation, temperature, and land cover.
- Combine both to uncover **where** things happen and **how much** — e.g., population density by region, slope-based risk zones.
- Tools like `geopandas` and `rasterio` bring these analyses together through **code-driven, reproducible workflows**.

:::



## <br> Thanks! <br> Q & A {style="text-align: center;"}
